- if post.comments_count.positive?
  h4= t('comment.newest_comments')
  
- post.comments&.order(created_at: :desc).take(2).each do |comment|
  .short-comment
    .comment__content
      .avatar-simple-wrapper
        = link_to user_path(post.user) do
          - if comment.user.avatar.attached?
            = image_tag (image_url(rails_storage_proxy_path(comment.user.avatar))), loading: 'lazy', class: 'linear-avatar', crossorigin: 'anonymous'
          - else
            = image_tag 'user-alt-solid.svg', class: 'simple-avatar'
      .comment__user-name
        div.comment__user-name-actions
          h5.comment__actions
            span.sub-header__user-name
              = comment.user.full_name || comment.user.user_name
            span.comment__comment= distance_time_from(comment.created_at)
        h5.comment__comment
          = simple_format(comment.content)
    - if comment.user.id == current_user.id
      .short-comment-actions
        = link_to t('actions.edit'), edit_post_comment_path(post, comment), class: 'short-comment-action short-comment-action-edit'
          / = image_tag 'edit-regular.svg', loading: 'lazy', class: 'tiny-icon'
        = link_to t('actions.delete'), post_comment_path(post, comment), method: :delete, data: { confirm: 'Are you sure?' }, remote: true, class: 'short-comment-action'
          / = image_tag 'trash-alt-solid.svg', loading: 'lazy', class: 'tiny-icon', id: 'trash-icon'
