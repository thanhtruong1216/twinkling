
head
  title= t('share.by_your_side')

  style
    | body {
    |   font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    |   scroll-behavior: smooth;
    |   margin: 0;
    |   overflow-x: hidden;
    | }
    | 
    | .hero {
    |   min-height: 40vh;
    |   display: flex;
    |   align-items: center;
    |   justify-content: center;
    |   background: linear-gradient(135deg, #4f46e5, #ec4899);
    |   color: white;
    |   text-align: center;
    |   padding: 0 20px;
    | }
    | .hero h1 { font-size: 3rem; font-weight: 700; animation: fadeInDown 1s ease; }
    | .hero p { font-size: 1.25rem; margin: 20px 0; animation: fadeInUp 1s ease 0.5s; }
    | section { padding: 80px 20px; text-align: center; }
    | 
    | .feature-card {
    |   padding: 40px 20px;
    |   margin: 20px 0;
    |   border-radius: 15px;
    |   box-shadow: 0 4px 20px rgba(0,0,0,0.1);
    |   background: white;
    | }
    | 
    | .btn-gradient {
    |   background: linear-gradient(90deg, #4f46e5, #ec4899);
    |   color: white;
    |   border: none;
    |   padding: 12px 30px;
    |   border-radius: 50px;
    |   font-size: 1.1rem;
    |   font-weight: 600;
    |   transition: all 0.3s ease;
    | }
    | .btn-gradient:hover {
    |   opacity: 0.9;
    |   transform: translateY(-2px);
    |   box-shadow: 0 4px 12px rgba(79,70,229,0.3);
    | }
    | 
    | .cta {
    |   background: linear-gradient(90deg,#ec4899,#4f46e5);
    |   color: white;
    | }
    | 
    | .testimonial {
    |   background: #f5f3ff;
    |   color: #333;
    | }
    | .testimonial-card {
    |   padding: 30px 20px;
    |   margin: 20px 0;
    |   border-radius: 15px;
    |   box-shadow: 0 4px 15px rgba(0,0,0,0.1);
    |   max-width: 500px;
    |   background: white;
    | }
    | 
    | footer {
    |   background: #1e1b4b;
    |   color: white;
    |   padding: 40px 20px;
    | }
    | 
    | @keyframes fadeInDown {
    |   0% { opacity: 0; transform: translateY(-30px); }
    |   100% { opacity: 1; transform: translateY(0); }
    | }
    | @keyframes fadeInUp {
    |   0% { opacity: 0; transform: translateY(30px); }
    |   100% { opacity: 1; transform: translateY(0); }
    | }

  body.overflow-auto
    section.hero.py-5.page-wrapper.mb-4
      .container
        h1 = t('landing.hero.title')
        p.mt-3.fw-light.w-75.mx-auto = t('landing.hero.slogan')
        p.mt-3.fw-light = t('landing.hero.vote')
        = link_to t('landing.hero.button'), polls_path, class: 'btn btn-gradient btn-lg mt-4'

    section.feature id="features"
      .container.pt-4
        h2
        .row
          .col-md-4
            .feature-card
              = image_tag 'svgs/free.svg', alt: 'connect', class: 'feature-icon'
              h3 = t('landing.features.public')
              p style="font-size: 15px;" = t('landing.features.public_desc')
          / .col-md-4
          /   .feature-card
          /     = image_tag 'svgs/free.svg', alt: 'free', class: 'feature-icon'
          /     h3 = t('landing.features.free')
          /     p = t('landing.features.free_desc')
          .col-md-4
            .feature-card
              = image_tag 'svgs/trust.svg', alt: 'trust', class: 'feature-icon'
              h3 = t('landing.features.trust_vote')
              p = t('landing.features.trust_vote_desc')
          .col-md-4
            .feature-card
              = image_tag 'svgs/insight.svg', alt: 'Insight', class: 'feature-icon'
              h3 = t('landing.features.insights')
              p = t('landing.features.insights_desc')
        .row.mt-4
          .col-md-4
            .feature-card
              = image_tag 'svgs/comment.svg', alt: 'comment', class: 'feature-icon'
              h3 = t('landing.features.comment')
              p = t('landing.features.comment_desc')
          .col-md-4
            .feature-card
              = image_tag 'svgs/deep.svg', alt: 'Deep', class: 'feature-icon'
              h3 = t('landing.features.objective')
              p = t('landing.features.objective_desc')
          .col-md-4
            .feature-card
              = image_tag 'svgs/smile.svg', alt: 'Smile', class: 'feature-icon'
              h3 = t('landing.features.fun_poll')
              p = t('landing.features.fun_poll_desc')
          / .col-md-4
          /   .feature-card
          /     = image_tag 'svgs/leaf.svg', alt: 'Leaf', class: 'feature-icon'
          /     h3 = t('landing.features.smart_decision')
          /     p = t('landing.features.smart_decision_desc')

        / .row.mt-4
        /   .col-md-4
        /     .feature-card
        /       = image_tag 'svgs/smile.svg', alt: 'Smile', class: 'feature-icon'
        /       h3 = t('landing.features.fun_poll')
        /       p = t('landing.features.fun_poll_desc')
          / .col-md-4
          /   .feature-card
          /     = image_tag 'svgs/heart-eyes.svg', alt: 'Heart', class: 'feature-icon'
          /     h3 = t('landing.features.not_alone')
          /     p = t('landing.features.not_alone_desc')
          / .col-md-4
          /   .feature-card
          /     = image_tag 'svgs/leaf.svg', alt: 'Leaf', class: 'feature-icon'
          /     h3 = t('landing.features.smart_decision')
          /     p = t('landing.features.smart_decision_desc')

    - if @hot_polls.any?
      section.hot-polls.py-5.bg-light
        .container
          h2.text-center.mb-4 = t('landing.carousel.hot_polls')
          #hotPollCarousel.carousel.slide data-bs-ride="carousel" data-bs-interval="5000"
            .carousel-inner
              - @hot_polls.each_slice(2).with_index do |poll_group, i|
                .carousel-item class=(i == 0 ? "active" : "")
                  .row.g-4
                    - poll_group.each do |poll|
                      .col-md-6
                        .card.shadow-sm.h-100.position-relative.poll-card style="border-radius: 10px;"
                          = render 'polls/votes_count_badge', poll: poll
                          = link_to poll_path(poll)
                            = image_tag poll.image, style: "height:150px; width:100%; object-fit:cover; border-radius:5px 5px 0 0;" if poll.image.attached?
                            .card-body
                              = link_to poll.title, poll_path(poll), class: "h5 text-dark text-decoration-none"
                              - if user_signed_in?
                                ul.list-unstyled.mt-3
                                  - poll.options.each do |option|
                                    li.mb-2
                                      .d-flex.align-items-center.justify-content-between
                                        div
                                          - if option.image.attached?
                                            = image_tag option.image, class: "shadow-sm me-3", style: "min-width: 60px; width:60px; height:60px; object-fit:cover; border-radius:12px;"
                                          span.me-2 style="font-size: 15px !important;" = option.text  
                                        - user_vote = option.votes.find_by(user_id: current_user.id)
                                        - if user_vote
                                          = render 'votes/unvote_button', poll: poll, vote: user_vote, option: option, current_action: 'index'
                                        - else
                                          = render 'votes/vote_button', poll: poll, option: option, current_action: 'index'

            button.carousel-control-prev type="button" data-bs-target="#hotPollCarousel" data-bs-slide="prev"
              span.carousel-control-prev-icon aria-hidden="true"
              span.visually-hidden Previous

            button.carousel-control-next type="button" data-bs-target="#hotPollCarousel" data-bs-slide="next"
              span.carousel-control-next-icon aria-hidden="true"
              span.visually-hidden Next

    

    section.cta
      .container
        h2= t('landing.cta.title')
        p.mt-2= t('landing.cta.subtitle')
        = link_to t('landing.cta.button'), new_poll_path, class: 'btn btn-gradient btn-lg mt-4'

    section.testimonial
      h2
      .d-flex.flex-row.justify-content-center.gap-3.flex-wrap
        .testimonial-card
          p = t('landing.testimonial.t1')
          strong = t('landing.testimonial.t1_author')
        .testimonial-card
          p = t('landing.testimonial.t2')
          strong = t('landing.testimonial.t2_author')
        .testimonial-card
          p = t('landing.testimonial.t3')
          strong = t('landing.testimonial.t3_author')
