.py-5.page-wrapper.container
  - if @polls.any?
    .row.g-4
      - @polls.each do |poll|
        .col-md-6
          .card.shadow-sm.h-100 style="border-radius: 10px;"
            - if poll.image.attached?
              = image_tag poll.image,
                class: "shadow-sm border border-2 border-light",
                style: "width: 100%; height: 150px; object-fit: cover; border-radius: 10px 10px 0 0;"
            .card-body.d-flex.flex-column.justify-content-between
              div.text-muted.small.mb-3.d-flex.flex-column.justify-content-between style="font-size: 15px !important;"
                .d-flex.justify-content-between.align-items-center.mb-3
                  .avatar-wrapper
                    = link_to user_path(poll.user), class: 'd-flex align-items-center' do
                      .avatar-linear-wrapper
                        - if poll.user.avatar.attached?
                          = image_tag (image_url(rails_storage_proxy_path(poll.user.avatar))), loading: 'lazy', class: 'linear-avatar', crossorigin: 'anonymous'
                        - else
                          = image_tag 'user-alt-solid.svg', loading: 'lazy', class: 'linear-avatar', crossorigin: 'anonymous'
                      span.sub-header__user-name
                        = poll.user.user_name || poll.user.full_name

                  = render 'polls/following_user', poll: poll

                .d-flex.align-items-center.mb-2
                  = link_to poll.title, poll_path(poll),
                    class: "h5 card-title text-dark text-decoration-none fw-bold mb-1"
                  - total_votes = poll.options.sum { |opt| opt.votes.count }
                  - if total_votes > 2
                    span.badge.bg-danger.ms-2 HOT

                - if poll.purpose.present?
                  span.text-muted style="font-size: 15px;"
                    | #{t("index.poll_purpose")}: #{poll.purpose}

                - if user_signed_in?
                  ul.list-unstyled.mt-3
                    - poll.options.each do |option|
                      li.mb-2
                        .d-flex.align-items-center.justify-content-between
                          span.me-2 style="font-size: 15px !important;" = option.text
                          - already_voted = current_user.votes.exists?(option_id: poll.options.map(&:id))
                          - user_vote = option.votes.find_by(user_id: current_user.id)

                          - if user_vote
                            = button_to t("show.unvote"),
                              poll_vote_path(poll, user_vote, option_id: option.id),
                              method: :delete,
                              class: "btn btn-danger btn-sm",
                              style: "font-size: 15px !important;"
                          - elsif already_voted
                            = button_to t("show.vote"),
                              poll_votes_path(poll, option_id: option.id),
                              method: :post,
                              class: "btn btn-success btn-sm disabled opacity-50",
                              style: "font-size: 15px !important;",
                              title: "You already voted"
                          - else
                            = button_to t("show.vote"),
                              poll_votes_path(poll, option_id: option.id),
                              method: :post,
                              class: "btn btn-success btn-sm",
                              style: "font-size: 15px !important;"               
              div
                canvas.poll-chart id="pollChart-#{poll.id}" width="300" height="80"
                .d-flex.justify-content-between.align-items-center.mt-4
                  p.text-muted.small.mb-0 style="font-size: 15px !important;"
                    | #{t("show.created")} #{distance_of_time_in_words_to_now(poll.created_at)} #{t("show.ago")}
                  = link_to t('share.details'), poll_path(poll), class: "btn btn-outline-primary btn-sm mt-auto"
  - else
    p.text-center.text-muted.mt-5 Chưa có poll nào. Hãy tạo poll đầu tiên!

/===================== JS vẽ chart và khởi tạo carousel =====================/
script
  | function renderPollCharts() {
  |   const pollsData = #{raw @polls_data.to_json};
  |   pollsData.forEach(poll => {
  |     const ctx = document.getElementById(`pollChart-${poll.id}`);
  |     if (!ctx) return;
  |     
  |     const totalVotes = poll.options.reduce((sum, opt) => sum + opt.votes, 0) || 1;
  |     
  |     const data = {
  |       labels: poll.options.map(opt => opt.text),
  |       datasets: [{
  |         label: 'Vote %',
  |         data: poll.options.map(opt => ((opt.votes / totalVotes) * 100).toFixed(0)),
  |         backgroundColor: [
  |           'rgba(54, 162, 235, 0.7)',
  |           'rgba(255, 99, 132, 0.7)',
  |           'rgba(255, 206, 86, 0.7)',
  |           'rgba(75, 192, 192, 0.7)',
  |           'rgba(153, 102, 255, 0.7)',
  |           'rgba(255, 159, 64, 0.7)'
  |         ],
  |         borderColor: 'rgba(0,0,0,0.1)',
  |         borderWidth: 1,
  |         barThickness: 20
  |       }]
  |     };
  |     
  |     new Chart(ctx, {
  |       type: 'bar',
  |       data: data,
  |       options: {
  |         indexAxis: 'y',
  |         responsive: true,
  |         plugins: {
  |           legend: { display: false },
  |           tooltip: {
  |             enabled: true,
  |             callbacks: {
  |               label: function(context) {
  |                 const voteCount = poll.options[context.dataIndex].votes;
  |                 return `${context.raw}% (${voteCount} vote)`;
  |               }
  |             }
  |           }
  |         },
  |         scales: {
  |           x: { beginAtZero: true, max: 100, ticks: { callback: value => value + '%' } },
  |           y: { ticks: { autoSkip: false } }
  |         }
  |       }
  |     });
  |   });
  | }
  |
  | function initCarousels() {
  |   var carousels = document.querySelectorAll('.carousel');
  |   carousels.forEach((carousel) => {
  |     new bootstrap.Carousel(carousel, {
  |       interval: 3000,
  |       ride: "carousel"
  |     });
  |   });
  | }
  |
  | document.addEventListener("DOMContentLoaded", () => {
  |   renderPollCharts();
  |   initCarousels();
  | });
  |
  | document.addEventListener("turbolinks:load", () => {
  |   renderPollCharts();
  |   initCarousels();
  | });
  |
  | document.addEventListener("turbo:load", () => {
  |   renderPollCharts();
  |   initCarousels();
  | });
