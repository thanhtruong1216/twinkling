head
  title= t('share.by_your_side')
  
.container.my-4
  - if @polls.any?
    .row.g-4
      - @polls.each do |poll|
        .col-md-6
          .card.shadow-sm.h-100.position-relative.poll-card style="border-radius: 10px;"
            = render 'polls/votes_count_badge', poll: poll

            - if poll.image.attached?
              = link_to poll_path(poll)
                = image_tag poll.image,
                  class: "shadow-sm border border-2 border-light",
                  style: "width: 100%; height: 150px; object-fit: cover; border-radius: 10px 10px 0 0;",
                  fetchpriority: 'high'
            .card-body.d-flex.flex-column.justify-content-between
              div.text-muted.small.mb-3.d-flex.flex-column.justify-content-between style="font-size: 15px !important;"
                .d-flex.justify-content-between.align-items-center.mb-3
                  .avatar-wrapper
                    = link_to user_path(poll.user), class: 'd-flex align-items-center' do
                      .avatar-linear-wrapper
                        - if poll.user.avatar.attached?
                          = image_tag (image_url(rails_storage_proxy_path(poll.user.avatar))), loading: 'lazy', class: 'linear-avatar', crossorigin: 'anonymous', fetchpriority: 'high'
                        - else
                          = image_tag 'user-alt-solid.svg', loading: 'lazy', class: 'linear-avatar', crossorigin: 'anonymous'
                      span.sub-header__user-name
                        = poll.user.user_name || poll.user.full_name

                  = render 'polls/following_user', poll: poll

                .d-flex.align-items-center.mb-2
                  = link_to poll.title, poll_path(poll),
                    class: "h5 card-title text-dark text-decoration-none fw-bold mb-1"
                  - total_votes = poll.options.sum { |opt| opt.votes.count }
                  - if total_votes > 2
                    span.badge.bg-danger.ms-2 HOT

                - if poll.purpose.present?
                  span.text-muted style="font-size: 15px;"
                    | #{t("index.poll_purpose")}: #{poll.purpose}

                - if user_signed_in?
                  ul.list-unstyled.mt-3
                    - poll.options.each do |option|
                      li.mb-2
                        .d-flex.align-items-center.justify-content-between
                          span.me-2 style="font-size: 15px !important;" = option.text  
                          - user_vote = option.votes.find_by(user_id: current_user.id)
                          - if user_vote
                            = render 'votes/unvote_button', poll: poll, vote: user_vote, option: option, current_action: 'index'
                          - else
                            = render 'votes/vote_button', poll: poll, option: option, current_action: 'index'
              = render 'polls/chart', poll: poll
  - else
    p.text-center.text-muted.mt-5 Chưa có poll nào. Hãy tạo poll đầu tiên!

/===================== JS vẽ chart và khởi tạo carousel =====================/

script
  | let pollCharts = {};
  |
  | function renderPollCharts() {
  |   const pollsData = #{raw @polls_data.to_json};
  |   if (!Array.isArray(pollsData)) return;
  |
  |   pollsData.forEach(poll => {
  |     const ctx = document.getElementById(`pollChart-${poll.id}`);
  |     if (!ctx) return;
  |
  |     if (pollCharts[poll.id]) {
  |       pollCharts[poll.id].destroy();
  |     }
  |
  |     const totalVotes = poll.options.reduce((sum, opt) => sum + opt.votes, 0) || 1;
  |     ctx.height = poll.options.length * 30;
  |
  |     pollCharts[poll.id] = new Chart(ctx, {
  |       type: 'bar',
  |       data: {
  |         labels: poll.options.map(opt => opt.text),
  |         datasets: [{
  |           label: 'Vote %',
  |           data: poll.options.map(opt => ((opt.votes / totalVotes) * 100).toFixed(0)),
  |           backgroundColor: [
  |             '#9C27B0',
  |             '#BA68C8',
  |             '#7E57C2',
  |             '#64B5F6',
  |             '#4DD0E1',
  |             '#F06292'
  |           ],
  |           borderWidth: 0,
  |           barThickness: 20,
  |           maxBarThickness: 20
  |         }]
  |       },
  |       options: {
  |         indexAxis: 'y',
  |         responsive: true,
  |         plugins: {
  |           legend: { display: false },
  |           tooltip: {
  |             enabled: true,
  |             callbacks: {
  |               label: function(context) {
  |                 const voteCount = poll.options[context.dataIndex].votes;
  |                 return `${context.raw}% (${voteCount} vote${voteCount === 1 ? '' : 's'})`;
  |               }
  |             }
  |           }
  |         },
  |         scales: {
  |           x: {
  |             beginAtZero: true,
  |             max: 100,
  |             ticks: { callback: value => value + '%' }
  |           },
  |           y: { ticks: { autoSkip: false } }
  |         }
  |       }
  |     });
  |   });
  | }
  |
  | function initCarousels() {
  |   document.querySelectorAll('.carousel').forEach(carousel => {
  |     new bootstrap.Carousel(carousel, { interval: 3000, ride: "carousel" });
  |   });
  | }
  |
  | document.addEventListener("DOMContentLoaded", () => {
  |   renderPollCharts();
  |   initCarousels();
  | });
  |
  | document.addEventListener("turbolinks:load", () => {
  |   renderPollCharts();
  |   initCarousels();
  | });
  |
  | document.addEventListener("turbo:load", () => {
  |   renderPollCharts();
  |   initCarousels();
  | });
